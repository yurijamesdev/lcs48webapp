CREATE TABLE messages (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create the users table
CREATE TABLE users (
    user_id INT AUTO_INCREMENT PRIMARY KEY,
    user_name VARCHAR(255) UNIQUE NOT NULL,
    uer_pass VARCHAR(255) NOT NULL
);

-- Create the projects table
CREATE TABLE projects (
    project_id INT AUTO_INCREMENT PRIMARY KEY,
    project_name VARCHAR(255) NOT NULL,
    due_date DATE NOT NULL;
    task VARCHAR(255) NOT NULL;
    created_by INT,
    assigned_to INT,
    created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (created_by) REFERENCES users(user_id),
    FOREIGN KEY (assigned_to) REFERENCES users(user_id)
);

-- Create the sub_projects table
CREATE TABLE sub_projects (
    sub_project_id INT AUTO_INCREMENT PRIMARY KEY,
    project_id INT,
    sub_project_name VARCHAR(255) NOT NULL,
    sub_task VARCHAR(255) NOT NULL,
    sub_due_date DATE,
    sub_assignee INT,
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (sub_assignee) REFERENCES users(user_id)
);

-- Create the tasks table
CREATE TABLE tasks (
    task_id INT AUTO_INCREMENT PRIMARY KEY,
    project_id INT,
    task_name VARCHAR(255) NOT NULL,
    task_due_date DATE,
    assignee INT,
    FOREIGN KEY (project_id) REFERENCES projects(project_id),
    FOREIGN KEY (assignee) REFERENCES users(user_id)
);

-- Create the attachments table
CREATE TABLE attachments (
    attachment_id INT AUTO_INCREMENT PRIMARY KEY,
    task_id INT,
    file_name VARCHAR(255) NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    FOREIGN KEY (task_id) REFERENCES tasks(task_id)
);